---
interface Props {
    title: string;
    categories: string[];
    author: string;
    href: string;
}

const { title, categories, author, href } = Astro.props;
---

<a href={href} class="card-link" aria-labelledby="article-title">
    <article class="card">
        <h2 id="article-title" class="title">{title}</h2>
        <div class="categories">
            {categories.map((category, index) => (
                    <>
                        {index > 0 && <span class="separator">|</span>}
                        <span class="category">{category.toUpperCase()}</span>
                    </>
            ))}
        </div>
        <div class="author-line">
            <span class="author">{author}</span>
            <svg
                    class="arrow"
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    aria-hidden="true"
            >
                <path
                        d="M5 12h14M12 5l7 7-7 7"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                />
            </svg>
        </div>
    </article>
</a>

<style>
    .card-link {
        display: block;
        text-decoration: none;
        color: inherit;
        max-width: 600px;
        transition: transform 0.2s ease;
    }

    .card-link:hover {
        transform: translateX(4px);
    }

    .card {
        border: 1px solid #E5E5E5;
        padding: 1.25rem;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        background-color: white;
    }

    .title {
        font-family: "Times New Roman", Times, serif;
        font-style: italic;
        font-size: 1.25rem;
        line-height: 1.3;
        margin: 0;
        color: #1a1a1a;
    }

    .categories {
        font-family: Georgia, serif;
        font-size: 0.75rem;
        letter-spacing: 0.05em;
        color: #666;
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        align-items: center;
    }

    .category {
        white-space: nowrap;
    }

    .separator {
        color: #999;
    }

    .author-line {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-family: Georgia, serif;
        font-size: 0.875rem;
        color: #4a4a4a;
    }

    .arrow {
        transition: transform 0.2s ease;
    }

    .card-link:hover .arrow {
        transform: translateX(4px);
    }

    /* Focus styles for accessibility */
    .card-link:focus {
        outline: none;
    }

    .card-link:focus-visible {
        outline: 2px solid #0066cc;
        outline-offset: 2px;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .card {
            padding: 1rem;
            gap: 0.5rem;
        }

        .title {
            font-size: 1.125rem;
        }

        .categories {
            font-size: 0.6875rem;
        }

        .author-line {
            font-size: 0.8125rem;
        }
    }

    /* Reduce motion if preferred */
    @media (prefers-reduced-motion: reduce) {
        .card-link,
        .arrow {
            transition: none;
        }
    }
</style>